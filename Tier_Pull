import pandas as pd
import time
import numpy as np

'''
'''


def read_csv_file(file_location):
    df = pd.read_csv(file_location, engine='python', error_bad_lines=False)
    return df


def read_xlsx_file(file_location, sheet):
    df = pd.read_excel(file_location, sheet_name=sheet)
    return df


def df_reformater(original_df):
    """ Taking string format and turning into floats"""
    counter = 0
    new_df = []

    if not isinstance(original_df.iloc[0], float):

        for element in original_df:
            counter += 1

            if ',' in element:
                element = element.replace(',', '')

            new_df.append(float(element))

        return new_df

    else:
        return original_df


def check_vol_name(df):
    """
    Sometimes code returns different names
    for traded volume. This function
    prevents errors
    """

    cols = list(df)

    for item in cols:

        if 'Traded Vol' in item:
            traded_vol = item
            return traded_vol

    print('No Traded Vol Column')
    return


def split_string(df, str_2_split, beginning, split_location, end, index1, index2):
    """ Splitting Out String"""

    df[index1] = str_2_split.str[beginning:split_location]
    df[index2] = str_2_split.str[split_location:end]
    cols = list(df)

    if cols[0] == 'LP FloorCode':
        cols.insert(1, cols.pop(cols.index(index1)))
        cols.insert(2, cols.pop(cols.index(index2)))
    else:
        cols.insert(0, cols.pop(cols.index(index1)))
        cols.insert(1, cols.pop(cols.index(index2)))

    df = df.ix[:, cols]
    return df


def sort_values(df):
    df.sort_values(by=['LP Floor ID', 'MarkToMid 0s'], ascending=[True, True], inplace=True)
    return df


def ranking(df):
    """
    Returns the relative ranking of the
    tiers by Marked to Middle spread
    """

    rank_name = ['Platinum', 'Gold', 'Silver', 'Bronze',
                 'Steel', 'Aluminium', 'Copper', 'Tin',
                 'Wood', 'Sand', 'Water', 'Air']
    tier_list = []

    names = df['LP Floor ID'].unique()

    for element in names:

        unique_LP = df.loc[df['LP Floor ID'] == element]
        count_alpha = 0
        count_number = 0

        for index, row in unique_LP.iterrows():

            if row['Tier Code'].isalpha():
                tier_list.append(rank_name[count_alpha])
                count_alpha += 1
            else:
                tier_list.append(rank_name[count_number])
                count_number += 1

    df['Ranking'] = tier_list
    return df


def print_pandas(df):
    with pd.option_context('display.max_rows', None, 'display.max_columns', 8):
        print(df)


def df_filter(df, filter_column, filter_value):
    df = df[df[filter_column].str.contains(filter_value, na=False)]
    return df


def main():
    start_time = time.clock()

    df = read_csv_file(r"\\newco.global\newcoroot\Global\EMEA\userdir$\o_boom\Oliver\LC_Counterparty.csv")

    '''
    Splitting out the Floor code
    To make it concatenate-able
    Then concatenating
    '''

    df = split_string(df, df["LP FloorCode"].astype(str), 0, 3, 4, 'LP Floor ID', 'Tier Code')
    df['MarkToMid 0s'] = df_reformater(df['MarkToMid 0s'])

    traded_vol = check_vol_name(df)
    df[traded_vol] = df_reformater(df[traded_vol])

    df_floor_code = df.groupby(['LP FloorCode']).agg({'MarkToMid 0s': np.mean, traded_vol: np.sum})

    '''
    Same again but need to use index
    instead of column for this time
    '''

    df_ranking = split_string(df_floor_code, df_floor_code.index, 0, 3, 4, 'LP Floor ID', 'Tier Code')

    df_ranking = sort_values(df_ranking)
    df_ranking = ranking(df_ranking)

    '''
    Write dataframe information to xlsx
    '''

    df_tier_change = read_xlsx_file(r"\\newco.global\newcoroot\Global\EMEA\userdir$"
                                         r"\o_boom\Oliver\LPM_past_6_months - Copy.xlsx",
                                        'Export Worksheet')

    df_tier_change = df_filter(df_tier_change, 'CCY_PAIR', 'EUR/USD')

    df_1 = df_filter(df_tier_change, 'STATUS', 'Entitlement added')
    df_2 = df_filter(df_tier_change, 'STATUS', 'Entitlement removed')

    df_tier_change = pd.concat([df_1, df_2])

    df_tier_change = split_string(df_tier_change, df_tier_change["LP_TIER"].astype(str), 0, 3, 4, 'LP Floor ID', 'Tier Code')

    write_location = pd.ExcelWriter(r"\\newco.global\newcoroot\Global\EMEA"
                                    r"\userdir$\o_boom\Oliver\LC_Counterparty_Out.xlsx")

    df.to_excel(write_location, 'Performance')
    df_ranking.to_excel(write_location, 'Tier Ranking')
    df_tier_change.to_excel(write_location, 'Tier Changes', index=False)


    write_location.save()

    print(time.clock() - start_time, "seconds")


if __name__ == '__main__':
    main()
